openapi: "3.0.1"

info:
  title: "Register"
  version: "1"
  description: Register API

servers:
  - url: http://localhost:8080
    description: Local server

paths:

  /teacher:
    post:
      summary: Save Teacher
      operationId: saveTeacher
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'teacherSchemas.yml#/components/schemas/TeacherDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'teacherSchemas.yml#/components/schemas/TeacherDTO'

  /teacher/{id}:
    get:
      summary: Get Teacher By Id
      operationId: getTeacherById
      parameters:
        - name: id
          in: path
          description: Unique Id of an User
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'teacherSchemas.yml#/components/schemas/TeacherDTO'
  /child:
    post:
      summary: Save Child
      operationId: saveChild
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'childSchemas.yml#/components/schemas/ChildDTO'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: 'childSchemas.yml#/components/schemas/ChildDTO'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A description of the validation error(s) or bad input data.
                example:
                  message: "Validation failed: Name must be at least 3 characters long."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A description of the server error.
                example:
                  message: "Internal server error occurred."
  /child/{id}:
    get:
      summary: Get Child By Id
      operationId: getChildById
      parameters:
        - name: id
          in: path
          description: Unique Id of an Child
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'childSchemas.yml#/components/schemas/ChildDTO'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A description of the resource not being found.
                example:
                  message: "Child not found."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A description of the server error.
                example:
                  message: "Internal server error occurred."

  /activity:
    post:
      summary: Save Activity
      operationId: saveActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'activitySchemas.yml#/components/schemas/ActivityDTO'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: 'activitySchemas.yml#/components/schemas/ActivityDTO'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Get All Activities
      operationId: getAllActivities
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'activitySchemas.yml#/components/schemas/ActivityDTO'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /activity/{name}:
    get:
      summary: Get Activity By Name
      operationId: getActivityByName
      parameters:
        - name: name
          in: path
          description: Unique name of an Activity
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'activitySchemas.yml#/components/schemas/ActivityDTO'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Updates name of activity
      operationId: updateActivityByName
      parameters:
        - name: name
          in: path
          description: name of activity
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'activitySchemas.yml#/components/schemas/ActivityDTO'
      responses:
        200:
          description: OK
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Deletes activity by name
      operationId: deleteActivityByName
      parameters:
        - name: name
          in: path
          description: name of activity
          required: true
          schema:
            type: string
      responses:
        201:
          description: OK
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /parent:
    post:
      summary: Save Parent
      operationId: saveParent
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'parentSchemas.yml#/components/schemas/ParentDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'parentSchemas.yml#/components/schemas/ParentDTO'
  /parent/{id}:
    get:
      summary: Get Parent By Id
      operationId: getParentById
      parameters:
        - name: id
          in: path
          description: Unique Id of an Parent
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: 'parentSchemas.yml#/components/schemas/ParentDTO'
components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
